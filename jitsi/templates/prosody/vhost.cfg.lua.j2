-- Plugins path gets uncommented during jitsi-meet-tokens package install - that's where token plugin is located
--plugin_paths = { "/usr/share/jitsi-meet/prosody-plugins/" }

component_ports = { 5347 }
component_interface = "0.0.0.0"
consider_websocket_secure = true;
cross_domain_websocket = true;

VirtualHost "{{ jitsi_meet_domain }}"
{% if jitsi_use_jwt %}
        authentication = "token"
        app_id = "{{ jitsi_meet_domain }}"
        app_secret = "{{ jitsi_jwt_secret }}";
        allow_empty_token = {% if jitsi_allow_empty_token %}true{% else %}false{% endif %};
{% else %}
        authentication = "anonymous"
{% endif %}
        ssl = {
                key = "/etc/prosody/certs/{{ jitsi_meet_domain }}.key";
                certificate = "/etc/prosody/certs/{{ jitsi_meet_domain }}.crt";
        }
        -- we need bosh
        modules_enabled = {
            "bosh";
            "pubsub";
            "ping"; -- Enable mod_ping
            "websocket";
{% if jitsi_use_jwt %}
            "presence_identity";
{% endif %}
        }

        c2s_require_encryption = false

admins = {
  {% for jvb in groups['jvb'] %}{% if jvb is search("\."+jitsi_meet_domain) %}
  "{{ jvb }}",
  {% endif %}{% endfor %}
  "focus@auth.{{ jitsi_meet_domain }}"
}


VirtualHost "auth.{{ jitsi_meet_domain }}"
    ssl = {
        key = "/etc/prosody/certs/auth.{{ jitsi_meet_domain }}.key";
        certificate = "/etc/prosody/certs/auth.{{ jitsi_meet_domain }}.crt";
    }
    authentication = "internal_plain"

Component "internal-muc.{{ jitsi_meet_domain }}" "muc"
    modules_enabled = {
        "ping";
    }
    storage = "memory"
    muc_room_cache_size = 1000

Component "conference.{{ jitsi_meet_domain }}" "muc"
    storage = "memory"
    muc_room_locking = false
    muc_room_default_public_jids = true
    modules_enabled = {
{% if jitsi_use_jwt %}
        "token_verification";
        "token_moderation";
{% endif %}
    }

Component "focus.{{ jitsi_meet_domain }}"
    component_secret = "{{ jitsi_jicofo_secret }}"

{% for jvb in groups['jvb'] %}{% if jvb is search("\."+jitsi_meet_domain) %}
Component "{{ jvb }}"
    component_secret = "{{ jitsi_jvb_secret }}"
{% endif %}{% endfor %}

VirtualHost "recorder.{{ jitsi_meet_domain }}"
    modules_enabled = {
        "ping";
    }
    authentication = "internal_plain"
